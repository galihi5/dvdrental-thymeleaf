package com.gaw.dvdrental.config.auth;

import com.fasterxml.jackson.databind.ObjectMapper;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import org.springframework.http.HttpStatus;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.web.authentication.AuthenticationFailureHandler;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

@Component
public class MyCustomAuthenticationFailureHandler implements AuthenticationFailureHandler {

    private ObjectMapper objectMapper = new ObjectMapper();
    @Override
    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {
        System.out.println("### onAuthenticationFailure");
        response.setStatus(HttpStatus.UNAUTHORIZED.value());
        System.out.println(exception.getMessage());
        response.sendRedirect("/login?error");
//        response.sendRedirect("error");
//        Map<String, Object> data = new HashMap<>();
//        data.put("timestamp", Calendar.getInstance().getTime());
//        data.put("exception", exception.getMessage());
//        response.getOutputStream().println(objectMapper.writeValueAsString(data));
//        response.se
    }
}
